[{"D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\main.ts":"1","D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\App.vue":"2","D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\router\\index.ts":"3","D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\views\\HomeView.vue":"4","D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\views\\AboutView.vue":"5","D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\views\\LoginView.vue":"6","D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\views\\RoleView.vue":"7","D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\views\\UserView.vue":"8","D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\views\\GoodsView.vue":"9","D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\request\\api.ts":"10","D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\type\\role.ts":"11","D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\type\\user.ts":"12","D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\type\\goods.ts":"13","D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\request\\index.ts":"14","D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\views\\AuthorityView.vue":"15","D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\type\\authority.ts":"16"},{"size":339,"mtime":1678778899090,"results":"17","hashOfConfig":"18"},{"size":181,"mtime":1678364765000,"results":"19","hashOfConfig":"18"},{"size":2032,"mtime":1678802546627,"results":"20","hashOfConfig":"18"},{"size":1751,"mtime":1678801958162,"results":"21","hashOfConfig":"18"},{"size":89,"mtime":1678276901000,"results":"22","hashOfConfig":"18"},{"size":2868,"mtime":1678339933000,"results":"23","hashOfConfig":"18"},{"size":2370,"mtime":1678795548523,"results":"24","hashOfConfig":"18"},{"size":4631,"mtime":1678541509931,"results":"25","hashOfConfig":"18"},{"size":3326,"mtime":1678372113000,"results":"26","hashOfConfig":"18"},{"size":763,"mtime":1678800447967,"results":"27","hashOfConfig":"18"},{"size":138,"mtime":1678541598547,"results":"28","hashOfConfig":"18"},{"size":875,"mtime":1678537878085,"results":"29","hashOfConfig":"18"},{"size":588,"mtime":1678371119000,"results":"30","hashOfConfig":"18"},{"size":973,"mtime":1678802857784,"results":"31","hashOfConfig":"18"},{"size":542,"mtime":1678800158514,"results":"32","hashOfConfig":"18"},{"size":185,"mtime":1678796494399,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"bmeqp1",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\main.ts",[],[],"D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\App.vue",[],[],"D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\router\\index.ts",[],"D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\views\\HomeView.vue",[],"D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\views\\AboutView.vue",[],"D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\views\\LoginView.vue",[],"D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\views\\RoleView.vue",["71"],"<template>\n    <div>\n        <el-form :inline=\"true\">\n            <el-form-item>\n                <el-button type=\"primary\" @click=\"open\">添加角色</el-button>\n            </el-form-item>\n        </el-form>\n        <el-table :data=\"data.list\" border style=\"width: 100%\">\n            <el-table-column prop=\"roleId\" label=\"Id\" width=\"180\" />\n            <el-table-column prop=\"roleName\" label=\"角色名\" width=\"180\" />\n            <el-table-column label=\"修改权限\">\n                <template #default=\"scope\">\n                    <el-button type=\"primary\" link @click=\"handleEdit(scope.row)\">修改权限</el-button>\n                </template>\n            </el-table-column>\n        </el-table>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { onMounted, reactive } from 'vue';\nimport { getRoleList } from '@/request/api';\nimport { InitData, ListInt } from '@/type/role';\nimport { ElMessage, ElMessageBox, roleTypes } from 'element-plus';\nimport { useRouter} from \"vue-router\";\n\nconst router = useRouter();\n\nconst open = () => {\n  ElMessageBox.prompt('添加角色', {\n    confirmButtonText: '添加成功',\n    cancelButtonText: '取消',\n  })\n    .then(({ value }) => {\n      ElMessage({\n        type: 'success',\n        message: `添加角色:${value}`,\n      })\n    })\n    .catch(() => {\n      ElMessage({\n        type: 'info',\n        message: '取消添加',\n      })\n    })\n  }\nconst data = reactive(new InitData());\nonMounted(() => {\n    getRoleList().then(res => {\n      \n        data.list = res.data\n        \n    })\n})\n\nconst handleEdit = function(row:ListInt){\n    // router.push({\n    //   name: 'authority',\n    //   // query:{\n    //   //   id:row.roleId,\n    //   //   authority:row.authority.join(',') // 为了能在连接之后拼接数组,所以需要用来转化\n    //   // }\n    //   // 也可以使用params传参数, 不行,已经被弃用\n    //   // params:{\n    //   //   id: 0,\n    //   //   authority:[1,2,3,4,5]\n    //   // }\n    //   state:{\n    //     id: row.roleId,\n    //     authority: row.authority\n    //   }\n    // }\n    // )\n    // history.pushState({name: 'Example'}, \"pushState example\", 'page3.html');  \n    router.beforeEach(async to => {\n      to.meta.data = {\n        id: row.roleId,\n        authority: row.authority\n      } \n})\nrouter.push({\n      name:'authority'\n    }) \n}\n</script>\n\n<style scoped></style>","D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\views\\UserView.vue",["72"],"<!-- 用户列表 -->\n<template>\n    <div>\n        <div>\n            <el-form :inline=\"true\" :model=\"data.selectData\">\n                <el-form-item label=\"用户名\">\n                    <el-input v-model=\"data.selectData.nickName\" placeholder=\"请输入用户名\" />\n                </el-form-item>\n                <el-form-item label=\"角色\">\n                    <el-select v-model=\"data.selectData.role\" placeholder=\"请选择角色\">\n                        <el-option label=\"全部\" :value=\"0\"></el-option>\n                        <el-option v-for=\"item in data.roleList\" :label=\"item.roleName\" :value=\"item.roleId\"\n                            :key=\"item.roleId\" />\n                    </el-select>\n                </el-form-item>\n                <el-form-item>\n                    <el-button type=\"primary\" @click=\"onSubmit\">查询</el-button>\n                </el-form-item>\n            </el-form>\n        </div>\n        <el-table :data=\"data.list\" border style=\"width: 100%\">\n            <el-table-column prop=\"id\" label=\"Id\" width=\"180\" />\n            <el-table-column prop=\"nickName\" label=\"用户名\" width=\"180\" />\n            <el-table-column label=\"角色\">\n                <template #default=\"scope\">\n                    <el-button v-for=\"item in scope.row.role\" :key=\"item.role\" size=\"small\">\n                        {{ item.roleName }}\n                    </el-button>\n                </template>\n            </el-table-column>\n            <el-table-column>\n                <template #default=\"scope\">\n                    <el-button type=\"primary\" link @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n                </template>\n            </el-table-column>\n        </el-table>\n    </div>\n    <!-- 编辑对话框 -->\n    <el-dialog v-model=\"isShow\" title=\"编辑信息\" width=\"30%\" align-center>\n        <!-- 编辑表单 -->\n        <el-form :model=\"data.active\" label-width=\"120px\">\n            <el-form-item label=\"用户名\">\n                <el-input v-model=\"data.active.nickName\" />\n            </el-form-item>\n            <el-form-item label=\"角色\">\n                <el-select multiple v-model=\"data.active.role\" placeholder=\"请选择角色\">\n                    <el-option v-for=\"item in data.roleList\" :label=\"item.roleName\" :key=\"item.roleId\" :value=\"item.roleId\" />\n                </el-select>\n            </el-form-item>\n        </el-form>\n        <template #footer>\n            <span class=\"dialog-footer\">\n                <el-button @click=\"isShow = false\">取消</el-button>\n                <el-button type=\"primary\" @click=\"isShow = false\">\n                    确定\n                </el-button>\n            </span>\n        </template>\n        <span style=\"color: red;\">未实现具体功能</span>\n    </el-dialog>\n</template>\n\n<script setup lang=\"ts\">\nimport { getUserList, getRoleList } from '@/request/api';\nimport { InitData, ListInt, ActiveInt } from '@/type/user';\nimport { onMounted, reactive, watch, ref } from 'vue';\n\nconst data = reactive(new InitData());\nlet oldList: ListInt[];\nconst getUser = () => {\n    getUserList().then(res => {\n        data.list = res.data\n        oldList = res.data\n    })\n}\nconst getRole = () => {\n    getRoleList().then(res => {\n        data.roleList = res.data\n    })\n}\nonMounted(() => {\n    getUser();\n    getRole();\n})\n\nconst onSubmit = function () {\n    let arr: ListInt[] = [] // 接受返回的查询数组\n    if (data.selectData.nickName || data.selectData.role) {\n        if (data.selectData.nickName) {\n            arr = oldList.filter(value => {\n                return value.nickName.indexOf(data.selectData.nickName) !== -1;\n            })\n        }\n        if (data.selectData.role) {\n            arr = (data.selectData.nickName ? arr : oldList).filter(value => {\n                return value.role.find((item) => item.role === data.selectData.role)\n            })\n        }\n    } else {\n        arr = data.list\n    }\n    data.list = arr\n\n}\n// 监听两个查询值的变化,当都为空时将列表恢复为初始的数据(否则将是上次查询的数据)\nwatch([() => data.selectData.nickName, () => data.selectData.role],\n    () => {\n        if (data.selectData.nickName == \"\" && data.selectData.role == 0) {\n            // 重新获取数据\n            getUser()\n        }\n    })\nconst isShow = ref(false);\nconst handleEdit = function (index:number, row:ListInt) {\n    data.active = {\n        id: row.id,\n        nickName:row.nickName,\n        userName: row.userName,\n        role: row.role.map((value)=>value.role) // 这里没有实现好\n    }\n    isShow.value = true;\n    \n}\n</script>\n\n<style scoped></style>\n","D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\views\\GoodsView.vue",[],"D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\request\\api.ts",[],"D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\type\\role.ts",[],"D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\type\\user.ts",[],"D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\type\\goods.ts",[],"D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\request\\index.ts",["73"],"D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\views\\AuthorityView.vue",["74","75"],"<template>\r\n    <div>\r\n        权限列表\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { useRoute } from 'vue-router';\r\nimport { InitData } from '../type/authority';\r\n// import { getAuthorityList } from '@/request/api';\r\nimport { onMounted } from 'vue';\r\nconst route = useRoute();\r\n\r\nonMounted(() => {\r\n    // getAuthorityList().then(res => {\r\n    //     console.log(res);\r\n\r\n    // })\r\n})\r\n\r\nconst params: any = route.meta.data;\r\nconst data = new InitData(params.id, params.authority)\r\n\r\n</script>\r\n\r\n<style scoped></style>","D:\\ProgramSpace\\FrontEnd\\LearningProject\\vue3-ts-demo_backup\\src\\type\\authority.ts",[],{"ruleId":"76","severity":1,"message":"77","line":24,"column":35,"nodeType":"78","messageId":"79","endLine":24,"endColumn":44},{"ruleId":"76","severity":1,"message":"80","line":65,"column":29,"nodeType":"78","messageId":"79","endLine":65,"endColumn":38},{"ruleId":"81","severity":2,"message":"82","line":24,"column":11,"nodeType":"83","messageId":"84","endLine":24,"endColumn":28,"fix":"85"},{"ruleId":"86","severity":1,"message":"87","line":21,"column":15,"nodeType":"88","messageId":"89","endLine":21,"endColumn":18,"suggestions":"90"},{"ruleId":"76","severity":1,"message":"91","line":22,"column":7,"nodeType":"78","messageId":"79","endLine":22,"endColumn":11},"@typescript-eslint/no-unused-vars","'roleTypes' is defined but never used.","Identifier","unusedVar","'ActiveInt' is defined but never used.","@typescript-eslint/no-inferrable-types","Type number trivially inferred from a number literal, remove type annotation.","VariableDeclarator","noInferrableType",{"range":"92","text":"93"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["94","95"],"'data' is assigned a value but never used.",[679,686],"",{"messageId":"96","fix":"97","desc":"98"},{"messageId":"99","fix":"100","desc":"101"},"suggestUnknown",{"range":"102","text":"103"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"102","text":"104"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[417,420],"unknown","never"]